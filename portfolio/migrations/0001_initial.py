# Generated by Django 5.0 on 2024-09-24 16:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Tag name')),
                ('slug', models.SlugField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Category name')),
                ('slug', models.SlugField(max_length=250, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeaturesText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Planstext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ProjectFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photos', models.ImageField(upload_to='images/')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(blank=True, null=True, upload_to='icons/')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ServiceText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('text', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='hashtag nomi:')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=550, verbose_name='Post title')),
                ('author', models.CharField(default='Admin', max_length=100, verbose_name='Post author')),
                ('image', models.ImageField(upload_to='blog_images/')),
                ('publish_date', models.DateTimeField(auto_now_add=True, verbose_name='Published time')),
                ('published', models.BooleanField(default=True)),
                ('on_top', models.BooleanField(default=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='posts', to='portfolio.category')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=500, verbose_name='post likes')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='portfolio.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=100, verbose_name='Comment author')),
                ('comment', models.TextField(verbose_name='Comment')),
                ('image', models.ImageField(blank=True, null=True, upload_to='comment_images/')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='portfolio.post')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('photo', models.CharField(max_length=200, verbose_name='Rasm URL')),
                ('subtitle', models.CharField(max_length=200, verbose_name='Sub Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Xizmat haqida')),
                ('why_choose_me', models.TextField(blank=True, null=True, verbose_name='Nega aynan men')),
                ('plans_text', models.TextField(blank=True, null=True, verbose_name='Tariflar haqida matn')),
                ('features', models.ManyToManyField(related_name='Xususiyatlar', to='portfolio.featurestext')),
                ('services_text', models.ManyToManyField(related_name='services', to='portfolio.servicetext', verbose_name='kichik qobiliyatlar')),
            ],
        ),
        migrations.CreateModel(
            name='PremiumService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iid', models.IntegerField(default=3, editable=False, verbose_name='ID')),
                ('fullname', models.CharField(default='Premium', editable=False, max_length=255, verbose_name='Full Name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Premium package price')),
                ('description', models.ManyToManyField(to='portfolio.planstext', verbose_name='Xizmat haqida - Premium')),
                ('service', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='premium_service', to='portfolio.service')),
            ],
        ),
        migrations.CreateModel(
            name='BasicService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iid', models.IntegerField(default=1, editable=False, verbose_name='ID')),
                ('fullname', models.CharField(default='Basic', editable=False, max_length=255, verbose_name='Full Name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Basic package price')),
                ('description', models.ManyToManyField(to='portfolio.planstext', verbose_name='Xizmat haqida - Basic')),
                ('service', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='basic_service', to='portfolio.service')),
            ],
        ),
        migrations.CreateModel(
            name='StandardService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iid', models.IntegerField(default=2, editable=False, verbose_name='ID')),
                ('fullname', models.CharField(default='Standard', editable=False, max_length=255, verbose_name='Full Name')),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='Standard package price')),
                ('description', models.ManyToManyField(to='portfolio.planstext', verbose_name='Xizmat haqida - Standard')),
                ('service', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='standard_service', to='portfolio.service')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('subtitle', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Xizmat haqida')),
                ('project_name', models.CharField(blank=True, max_length=100, null=True)),
                ('clients', models.CharField(max_length=255)),
                ('budget', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration', models.IntegerField(help_text='Duration in days')),
                ('date', models.DateField()),
                ('footer_title', models.CharField(max_length=200, verbose_name='Pastdagi Sarlavha')),
                ('footer_text', models.TextField(verbose_name='Pastdagi Text')),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='portfolio.projectfilter')),
                ('photo', models.ManyToManyField(to='portfolio.projectphoto')),
                ('optimal_text', models.ManyToManyField(to='portfolio.projecttext', verbose_name='Hoqishiy tekslar')),
                ('hashtag', models.ManyToManyField(to='portfolio.tag')),
            ],
        ),
    ]
